++++ REJECTED PATCH 40
 
             try
             {
-                itemstack = packetbuffer.readItemStackFromBuffer();
+                push = packetbuffer.readItemStackFromBuffer();
 
-                if (itemstack == null)
+                if (push == null)
                 {
                     return;
                 }
 
-                if (!ItemEditableBook.validBookTagContents(itemstack.getTagCompound()))
+                if (!ItemEditableBook.validBookTagContents(push.getTagCompound()))
                 {
                     throw new IOException("Invalid book tag!");
                 }
 
-                itemstack1 = this.playerEntity.inventory.getCurrentItem();
+                stack = this.playerEntity.inventory.getCurrentItem();
 
-                if (itemstack1 != null)
+                if (stack != null)
                 {
-                    if (itemstack.getItem() == Items.written_book && itemstack1.getItem() == Items.writable_book)
+                    if (push.getItem() == Items.written_book && stack.getItem() == Items.writable_book)
                     {
-                        itemstack1.setTagInfo("author", new NBTTagString(this.playerEntity.getCommandSenderName()));
-                        itemstack1.setTagInfo("title", new NBTTagString(itemstack.getTagCompound().getString("title")));
-                        itemstack1.setTagInfo("pages", itemstack.getTagCompound().getTagList("pages", 8));
-                        itemstack1.func_150996_a(Items.written_book);
+                        stack.setTagInfo("author", new NBTTagString(this.playerEntity.getCommandSenderName()));
+                        ItemWritableBook.shadowUpdate(stack, push, true);
+                        CraftEventFactory.handleEditBookEvent(playerEntity, stack); // CraftBukkit
                     }
 
                     return;
                 }
             }
-            catch (Exception exception3)
+            // CraftBukkit start
+            catch (Throwable throwable)
             {
-                logger.error("Couldn\'t sign book", exception3);
-                return;
+                logger.error("Couldn\'t sign book", throwable);
+                if (throwable instanceof RuntimeException && !(throwable instanceof IOException))
+                {
+                    this.kickPlayerFromServer(throwable.getMessage());
+                }
+                else
+                {
+                    this.kickPlayerFromServer("Invalid book data!");
+                }
+                // CraftBukkit end
             }
             finally
             {
++++ END PATCH
